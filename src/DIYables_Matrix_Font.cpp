/*
   Copyright (c) 2024, DIYables.io. All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

   - Neither the name of the DIYables.io nor the names of its
     contributors may be used to endorse or promote products derived from
     this software without specific prior written permission.

   THIS SOFTWARE IS PROVIDED BY DIYABLES.IO "AS IS" AND ANY EXPRESS OR
   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
   DISCLAIMED. IN NO EVENT SHALL DIYABLES.IO BE LIABLE FOR ANY DIRECT,
   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
   IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
   POSSIBILITY OF SUCH DAMAGE.
*/

#include <DIYables_Matrix_Font.h>

const uint8_t DIYables_Font::defaultChar[8] = {
    0x00, 0x00, 0x00, 0x00, 0x00,  // Empty character
    0x00, 0x00, 0x00
};

const uint8_t DIYables_Font::degreeSymbol[8] = {
    0b00011000,  //   **
    0b00100100,  //  *  *
    0b00100100,  //  *  *
    0b00011000,  //   **
    0b00000000,  //
    0b00000000,  //
    0b00000000,  //
    0b00000000   //
};

const uint8_t DIYables_Font::font[95][8]  = {
    // Character ' ' (ASCII 32)
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },
    // Character '!' (ASCII 33)
    { 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00000000, 0b00000000, 0b00011000, 0b00000000 },
    // Character '"' (ASCII 34)
    { 0b01100110, 0b01100110, 0b01100110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },
    // Character '#' (ASCII 35)
    { 0b01100110, 0b01100110, 0b11111111, 0b01100110, 0b11111111, 0b01100110, 0b01100110, 0b00000000 },
    // Character '$' (ASCII 36)
    { 0b00011000, 0b00111110, 0b01100000, 0b00111100, 0b00000110, 0b01111100, 0b00011000, 0b00000000 },
    // Character '%' (ASCII 37)
    { 0b01100010, 0b01100110, 0b00001100, 0b00011000, 0b00110000, 0b01100110, 0b01000110, 0b00000000 },
    // Character '&' (ASCII 38)
    { 0b00111100, 0b01100110, 0b00111100, 0b00111000, 0b01100111, 0b01100110, 0b00111111, 0b00000000 },
    // Character ''' (ASCII 39)
    { 0b00000110, 0b00001100, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },
    // Character '(' (ASCII 40)
    { 0b00001100, 0b00011000, 0b00110000, 0b00110000, 0b00110000, 0b00011000, 0b00001100, 0b00000000 },
    // Character ')' (ASCII 41)
    { 0b00110000, 0b00011000, 0b00001100, 0b00001100, 0b00001100, 0b00011000, 0b00110000, 0b00000000 },
    // Character '*' (ASCII 42)
    { 0b00000000, 0b01100110, 0b00111100, 0b11111111, 0b00111100, 0b01100110, 0b00000000, 0b00000000 },
    // Character '+' (ASCII 43)
    { 0b00000000, 0b00011000, 0b00011000, 0b01111110, 0b00011000, 0b00011000, 0b00000000, 0b00000000 },
    // Character ',' (ASCII 44)
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000, 0b00011000, 0b00110000 },
    // Character '-' (ASCII 45)
    { 0b00000000, 0b00000000, 0b00000000, 0b01111110, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },
    // Character '.' (ASCII 46)
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000, 0b00011000, 0b00000000 },
    // Character '/' (ASCII 47)
    { 0b00000000, 0b00000011, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b01100000, 0b00000000 },
    // Character '0' (ASCII 48)
    { 0b00111100, 0b01100110, 0b01101110, 0b01110110, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character '1' (ASCII 49)
    { 0b00011000, 0b00011000, 0b00111000, 0b00011000, 0b00011000, 0b00011000, 0b01111110, 0b00000000 },
    // Character '2' (ASCII 50)
    { 0b00111100, 0b01100110, 0b00000110, 0b00001100, 0b00110000, 0b01100000, 0b01111110, 0b00000000 },
    // Character '3' (ASCII 51)
    { 0b00111100, 0b01100110, 0b00000110, 0b00011100, 0b00000110, 0b01100110, 0b00111100, 0b00000000 },
    // Character '4' (ASCII 52)
    { 0b00000110, 0b00001110, 0b00011110, 0b01100110, 0b01111111, 0b00000110, 0b00000110, 0b00000000 },
    // Character '5' (ASCII 53)
    { 0b01111110, 0b01100000, 0b01111100, 0b00000110, 0b00000110, 0b01100110, 0b00111100, 0b00000000 },
    // Character '6' (ASCII 54)
    { 0b00111100, 0b01100110, 0b01100000, 0b01111100, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character '7' (ASCII 55)
    { 0b01111110, 0b01100110, 0b00001100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00000000 },
    // Character '8' (ASCII 56)
    { 0b00111100, 0b01100110, 0b01100110, 0b00111100, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character '9' (ASCII 57)
    { 0b00111100, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b01100110, 0b00111100, 0b00000000 },
    // Character ':' (ASCII 58)
    { 0b00000000, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00011000, 0b00000000, 0b00000000 },
    // Character ';' (ASCII 59)
    { 0b00000000, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00011000, 0b00011000, 0b00110000 },
    // Character '<' (ASCII 60)
    { 0b00001110, 0b00011000, 0b00110000, 0b01100000, 0b00110000, 0b00011000, 0b00001110, 0b00000000 },
    // Character '=' (ASCII 61)
    { 0b00000000, 0b00000000, 0b01111110, 0b00000000, 0b01111110, 0b00000000, 0b00000000, 0b00000000 },
    // Character '>' (ASCII 62)
    { 0b01110000, 0b00011000, 0b00001100, 0b00000110, 0b00001100, 0b00011000, 0b01110000, 0b00000000 },
    // Character '?' (ASCII 63)
    { 0b00111100, 0b01100110, 0b00000110, 0b00001100, 0b00011000, 0b00000000, 0b00011000, 0b00000000 },
    // Character '@' (ASCII 64)
    { 0b00111100, 0b01100110, 0b01101110, 0b01101110, 0b01100000, 0b01100010, 0b00111100, 0b00000000 },
    // Character 'A' (ASCII 65)
    { 0b00011000, 0b00111100, 0b01100110, 0b01111110, 0b01100110, 0b01100110, 0b01100110, 0b00000000 },
    // Character 'B' (ASCII 66)
    { 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b00000000 },
    // Character 'C' (ASCII 67)
    { 0b00111100, 0b01100110, 0b01100000, 0b01100000, 0b01100000, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'D' (ASCII 68)
    { 0b01111000, 0b01101100, 0b01100110, 0b01100110, 0b01100110, 0b01101100, 0b01111000, 0b00000000 },
    // Character 'E' (ASCII 69)
    { 0b01111110, 0b01100000, 0b01100000, 0b01111000, 0b01100000, 0b01100000, 0b01111110, 0b00000000 },
    // Character 'F' (ASCII 70)
    { 0b01111110, 0b01100000, 0b01100000, 0b01111000, 0b01100000, 0b01100000, 0b01100000, 0b00000000 },
    // Character 'G' (ASCII 71)
    { 0b00111100, 0b01100110, 0b01100000, 0b01101110, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'H' (ASCII 72)
    { 0b01100110, 0b01100110, 0b01100110, 0b01111110, 0b01100110, 0b01100110, 0b01100110, 0b00000000 },
    // Character 'I' (ASCII 73)
    { 0b00111100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00111100, 0b00000000 },
    // Character 'J' (ASCII 74)
    { 0b00011110, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b01101100, 0b00111000, 0b00000000 },
    // Character 'K' (ASCII 75)
    { 0b01100110, 0b01101100, 0b01111000, 0b01110000, 0b01111000, 0b01101100, 0b01100110, 0b00000000 },
    // Character 'L' (ASCII 76)
    { 0b01100000, 0b01100000, 0b01100000, 0b01100000, 0b01100000, 0b01100000, 0b01111110, 0b00000000 },
    // Character 'M' (ASCII 77)
    { 0b01100011, 0b01110111, 0b01111111, 0b01101011, 0b01100011, 0b01100011, 0b01100011, 0b00000000 },
    // Character 'N' (ASCII 78)
    { 0b01100110, 0b01110110, 0b01111110, 0b01111110, 0b01101110, 0b01100110, 0b01100110, 0b00000000 },
    // Character 'O' (ASCII 79)
    { 0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'P' (ASCII 80)
    { 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01100000, 0b01100000, 0b01100000, 0b00000000 },
    // Character 'Q' (ASCII 81)
    { 0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00001110, 0b00000000 },
    // Character 'R' (ASCII 82)
    { 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01111000, 0b01101100, 0b01100110, 0b00000000 },
    // Character 'S' (ASCII 83)
    { 0b00111100, 0b01100110, 0b01100000, 0b00111100, 0b00000110, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'T' (ASCII 84)
    { 0b01111110, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00000000 },
    // Character 'U' (ASCII 85)
    { 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'V' (ASCII 86)
    { 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00000000 },
    // Character 'W' (ASCII 87)
    { 0b01100011, 0b01100011, 0b01100011, 0b01101011, 0b01111111, 0b01110111, 0b01100011, 0b00000000 },
    // Character 'X' (ASCII 88)
    { 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00111100, 0b01100110, 0b01100110, 0b00000000 },
    // Character 'Y' (ASCII 89)
    { 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00011000, 0b00011000, 0b00000000 },
    // Character 'Z' (ASCII 90)
    { 0b01111110, 0b00000110, 0b00001100, 0b00011000, 0b00110000, 0b01100000, 0b01111110, 0b00000000 },
    // Character '[' (ASCII 91)
    { 0b00111100, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00110000, 0b00111100, 0b00000000 },
    // Character '\' (ASCII 92)
    { 0b00000000, 0b01100000, 0b00110000, 0b00011000, 0b00001100, 0b00000110, 0b00000011, 0b00000000 },
    // Character ']' (ASCII 93)
    { 0b00111100, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00001100, 0b00111100, 0b00000000 },
    // Character '^' (ASCII 94)
    { 0b00000000, 0b00011000, 0b00111100, 0b01100110, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },
    // Character '_' (ASCII 95)
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111 },
    // Character '`' (ASCII 96)
    { 0b00110000, 0b00011000, 0b00001100, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },
    // Character 'a' (ASCII 97)
    { 0b00000000, 0b00000000, 0b00111100, 0b00000110, 0b00111110, 0b01100110, 0b00111110, 0b00000000 },
    // Character 'b' (ASCII 98)
    { 0b01100000, 0b01100000, 0b01111100, 0b01100110, 0b01100110, 0b01100110, 0b01111100, 0b00000000 },
    // Character 'c' (ASCII 99)
    { 0b00000000, 0b00000000, 0b00111100, 0b01100110, 0b01100000, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'd' (ASCII 100)
    { 0b00000110, 0b00000110, 0b00111110, 0b01100110, 0b01100110, 0b01100110, 0b00111110, 0b00000000 },
    // Character 'e' (ASCII 101)
    { 0b00000000, 0b00000000, 0b00111100, 0b01100110, 0b01111110, 0b01100000, 0b00111110, 0b00000000 },
    // Character 'f' (ASCII 102)
    { 0b00011100, 0b00110110, 0b00110000, 0b01111000, 0b00110000, 0b00110000, 0b00110000, 0b00000000 },
    // Character 'g' (ASCII 103)
    { 0b00000000, 0b00000000, 0b00111110, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b01111100 },
    // Character 'h' (ASCII 104)
    { 0b01100000, 0b01100000, 0b01111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00000000 },
    // Character 'i' (ASCII 105)
    { 0b00011000, 0b00000000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00000000 },
    // Character 'j' (ASCII 106)
    { 0b00000110, 0b00000000, 0b00000110, 0b00000110, 0b00000110, 0b00000110, 0b01100110, 0b00111100 },
    // Character 'k' (ASCII 107)
    { 0b01100000, 0b01100000, 0b01100110, 0b01101100, 0b01111000, 0b01111100, 0b01100110, 0b00000000 },
    // Character 'l' (ASCII 108)
    { 0b00111000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00111100, 0b00000000 },
    // Character 'm' (ASCII 109)
    { 0b00000000, 0b00000000, 0b01100011, 0b01110111, 0b01111111, 0b01101011, 0b01100011, 0b00000000 },
    // Character 'n' (ASCII 110)
    { 0b00000000, 0b00000000, 0b01111100, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00000000 },
    // Character 'o' (ASCII 111)
    { 0b00000000, 0b00000000, 0b00111100, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'p' (ASCII 112)
    { 0b00000000, 0b00000000, 0b01111100, 0b01100110, 0b01100110, 0b01111100, 0b01100000, 0b01100000 },
    // Character 'q' (ASCII 113)
    { 0b00000000, 0b00000000, 0b00111110, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b00000110 },
    // Character 'r' (ASCII 114)
    { 0b00000000, 0b00000000, 0b01111100, 0b01100110, 0b01100000, 0b01100000, 0b01100000, 0b00000000 },
    // Character 's' (ASCII 115)
    { 0b00000000, 0b00000000, 0b00111100, 0b01100000, 0b00111100, 0b00000110, 0b01111100, 0b00000000 },
    // Character 't' (ASCII 116)
    { 0b00110000, 0b00110000, 0b11111100, 0b00110000, 0b00110000, 0b00110110, 0b00011100, 0b00000000 },
    // Character 'u' (ASCII 117)
    { 0b00000000, 0b00000000, 0b01100110, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00000000 },
    // Character 'v' (ASCII 118)
    { 0b00000000, 0b00000000, 0b01100110, 0b01100110, 0b01100110, 0b00111100, 0b00011000, 0b00000000 },
    // Character 'w' (ASCII 119)
    { 0b00000000, 0b00000000, 0b01100011, 0b01101011, 0b01111111, 0b00110110, 0b00100010, 0b00000000 },
    // Character 'x' (ASCII 120)
    { 0b00000000, 0b00000000, 0b01100110, 0b00111100, 0b00011000, 0b00111100, 0b01100110, 0b00000000 },
    // Character 'y' (ASCII 121)
    { 0b00000000, 0b00000000, 0b01100110, 0b01100110, 0b01100110, 0b00111110, 0b00000110, 0b01111100 },
    // Character 'z' (ASCII 122)
    { 0b00000000, 0b00000000, 0b01111110, 0b00001100, 0b00011000, 0b00110000, 0b01111110, 0b00000000 },
    // Character '{' (ASCII 123)
    { 0b00001110, 0b00011000, 0b00011000, 0b01110000, 0b00011000, 0b00011000, 0b00001110, 0b00000000 },
    // Character '|' (ASCII 124)
    { 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000 },
    // Character '}' (ASCII 125)
    { 0b01110000, 0b00011000, 0b00011000, 0b00001110, 0b00011000, 0b00011000, 0b01110000, 0b00000000 },
    // Character '~' (ASCII 126)
    { 0b00111011, 0b01101110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 }
};

DIYables_Font::DIYables_Font() {
    // Constructor doesn't need to do anything
}

const uint8_t* DIYables_Font::getChar(unsigned char c) {
    if (c >= 32 && c <= 126) {
        return font[c - 32];
    } else if (c == 176) {  // ASCII code 176 for '°'
        return degreeSymbol;
    } else {
        return defaultChar;
    }
}